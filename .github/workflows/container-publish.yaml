name: Build Docker Images

on:
  push:
    branches:
      - main

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
    - name: Check out code
      uses: actions/checkout@v3

    - name: Install Docker
      run: |
        # Install Docker
        sudo apt-get update
        sudo apt-get -y install apt-transport-https ca-certificates curl software-properties-common
        curl -fsSL https://download.docker.com/linux/ubuntu/gpg | sudo apt-key add -
        sudo add-apt-repository "deb [arch=amd64] https://download.docker.com/linux/ubuntu $(lsb_release -cs) stable"
        sudo apt-get update
        sudo apt-get -y install docker-ce

    - name: Set up QEMU
      run: docker run --rm --privileged multiarch/qemu-user-static --reset -p yes

    - name: List Dockerfiles
      run: |
        # List Dockerfiles matching the pattern
        DOCKERFILES=$(find ./images -type f -name "Dockerfile.*")
        echo "$DOCKERFILES"  # For debugging purposes

    - name: Build and push Docker images
      run: |
        for DOCKERFILE in $DOCKERFILES; do
          # Extract the image name from the Dockerfile path
          IMAGE_NAME=$(basename "${DOCKERFILE}" | sed 's/^Dockerfile\.//')

          # Build and push multi-architecture Docker images
          docker buildx create --use
          docker buildx build --platform linux/arm64,linux/amd64 -t "${DOCKERHUB_USER}/${IMAGE_NAME}" -f "$DOCKERFILE" .

          # Log in to Docker Hub (replace with your own Docker Hub username and token)
          echo "$DOCKERHUB_PASSWORD" | docker login -u "$DOCKERHUB_USER" --password-stdin

          # Push the multi-architecture Docker image to Docker Hub
          docker buildx use default
          docker push "${DOCKERHUB_USER}/${IMAGE_NAME}"
        done
      env:
        DOCKERHUB_USER: ${{ secrets.DOCKERHUB_USERNAME }}
        DOCKERHUB_PASSWORD: ${{ secrets.DOCKERHUB_TOKEN }}
